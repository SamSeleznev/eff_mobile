name: CI/CD Pipeline

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      TERRAFORM_DIR: ./terraform
      INVENTORY_FILE: ./inventory.ini
      PYTHON_VERSION: '3.x'
      SSH_KEY_PATH: ~/.ssh/id_rsa

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.TERRAFORM_DIR }}

      - name: Terraform Apply
        id: terraform
        run: terraform apply -auto-approve
        working-directory: ${{ env.TERRAFORM_DIR }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Save IP address as artifact
        uses: actions/upload-artifact@v2
        with:
          name: instance_ip
          path: ${{ env.TERRAFORM_DIR }}/instance_ip.txt

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ${{ env.SSH_KEY_PATH }}
          chmod 600 ${{ env.SSH_KEY_PATH }}

      - name: Load IP address from artifact
        uses: actions/download-artifact@v2
        with:
          name: instance_ip
          path: ${{ env.TERRAFORM_DIR }}

      - name: Create inventory file
        run: |
          IP_ADDRESS=$(cat ${{ env.TERRAFORM_DIR }}/instance_ip.txt)
          echo "[PROD_SERVER_WEB]" > ${{ env.INVENTORY_FILE }}
          echo "$IP_ADDRESS ansible_user=ubuntu" >> ${{ env.INVENTORY_FILE }}

      - name: Wait for SSH to become available
        run: |
          for i in {1..15}; do 
            ssh -o StrictHostKeyChecking=no -i ${{ env.SSH_KEY_PATH }} ubuntu@$IP_ADDRESS echo "SSH is available!" && break
            echo "SSH not available, waiting for 10 seconds..."
            sleep 10
          done
        env:
          IP_ADDRESS: $(cat ${{ env.TERRAFORM_DIR }}/instance_ip.txt)

      - name: Deploy containers to target machine
        env:
          ANSIBLE_HOST_KEY_CHECKING: False
        run: ansible-playbook -i ${{ env.INVENTORY_FILE }} ./ansible/site.yml -e "ansible_python_interpreter=/usr/bin/python3"
